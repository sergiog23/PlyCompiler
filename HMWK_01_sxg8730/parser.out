Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list semicolon_opt
Rule 2     semicolon_opt -> epsilon
Rule 3     semicolon_opt -> SEMICOLON
Rule 4     statement -> expression
Rule 5     statement_list -> statement_list SEMICOLON statement
Rule 6     statement_list -> statement
Rule 7     identifier -> ID
Rule 8     expression -> expression PLUS expression
Rule 9     expression -> expression MINUS expression
Rule 10    expression -> expression TIMES expression
Rule 11    expression -> expression DIVIDE expression
Rule 12    expression -> expression MODULOS expression
Rule 13    expression -> expression CARAT expression
Rule 14    expression -> identifier EQUALS expression
Rule 15    expression -> MINUS expression
Rule 16    expression -> PLUS expression
Rule 17    expression -> LPAREN expression RPAREN
Rule 18    expression -> INT_LITERAL
Rule 19    expression -> identifier
Rule 20    epsilon -> <empty>

Terminals, with rules where they appear

CARAT                : 13
DIVIDE               : 11
EQUALS               : 14
ID                   : 7
INT_LITERAL          : 18
LPAREN               : 17
MINUS                : 9 15
MODULOS              : 12
PLUS                 : 8 16
RPAREN               : 17
SEMICOLON            : 3 5
TIMES                : 10
error                : 

Nonterminals, with rules where they appear

epsilon              : 2
expression           : 4 8 8 9 9 10 10 11 11 12 12 13 13 14 15 16 17
identifier           : 14 19
program              : 0
semicolon_opt        : 1
statement            : 5 6
statement_list       : 1 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list semicolon_opt
    (5) statement_list -> . statement_list SEMICOLON statement
    (6) statement_list -> . statement
    (4) statement -> . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    identifier                     shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list . semicolon_opt
    (5) statement_list -> statement_list . SEMICOLON statement
    (2) semicolon_opt -> . epsilon
    (3) semicolon_opt -> . SEMICOLON
    (20) epsilon -> .

    SEMICOLON       shift and go to state 12
    $end            reduce using rule 20 (epsilon -> .)

    semicolon_opt                  shift and go to state 11
    epsilon                        shift and go to state 13

state 3

    (6) statement_list -> statement .

    SEMICOLON       reduce using rule 6 (statement_list -> statement .)
    $end            reduce using rule 6 (statement_list -> statement .)


state 4

    (4) statement -> expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    SEMICOLON       reduce using rule 4 (statement -> expression .)
    $end            reduce using rule 4 (statement -> expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MODULOS         shift and go to state 18
    CARAT           shift and go to state 19


state 5

    (16) expression -> PLUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 20
    identifier                     shift and go to state 7

state 6

    (15) expression -> MINUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 21
    identifier                     shift and go to state 7

state 7

    (14) expression -> identifier . EQUALS expression
    (19) expression -> identifier .

    EQUALS          shift and go to state 22
    PLUS            reduce using rule 19 (expression -> identifier .)
    MINUS           reduce using rule 19 (expression -> identifier .)
    TIMES           reduce using rule 19 (expression -> identifier .)
    DIVIDE          reduce using rule 19 (expression -> identifier .)
    MODULOS         reduce using rule 19 (expression -> identifier .)
    CARAT           reduce using rule 19 (expression -> identifier .)
    SEMICOLON       reduce using rule 19 (expression -> identifier .)
    $end            reduce using rule 19 (expression -> identifier .)
    RPAREN          reduce using rule 19 (expression -> identifier .)


state 8

    (17) expression -> LPAREN . expression RPAREN
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 23
    identifier                     shift and go to state 7

state 9

    (18) expression -> INT_LITERAL .

    PLUS            reduce using rule 18 (expression -> INT_LITERAL .)
    MINUS           reduce using rule 18 (expression -> INT_LITERAL .)
    TIMES           reduce using rule 18 (expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 18 (expression -> INT_LITERAL .)
    MODULOS         reduce using rule 18 (expression -> INT_LITERAL .)
    CARAT           reduce using rule 18 (expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 18 (expression -> INT_LITERAL .)
    $end            reduce using rule 18 (expression -> INT_LITERAL .)
    RPAREN          reduce using rule 18 (expression -> INT_LITERAL .)


state 10

    (7) identifier -> ID .

    EQUALS          reduce using rule 7 (identifier -> ID .)
    PLUS            reduce using rule 7 (identifier -> ID .)
    MINUS           reduce using rule 7 (identifier -> ID .)
    TIMES           reduce using rule 7 (identifier -> ID .)
    DIVIDE          reduce using rule 7 (identifier -> ID .)
    MODULOS         reduce using rule 7 (identifier -> ID .)
    CARAT           reduce using rule 7 (identifier -> ID .)
    SEMICOLON       reduce using rule 7 (identifier -> ID .)
    $end            reduce using rule 7 (identifier -> ID .)
    RPAREN          reduce using rule 7 (identifier -> ID .)


state 11

    (1) program -> statement_list semicolon_opt .

    $end            reduce using rule 1 (program -> statement_list semicolon_opt .)


state 12

    (5) statement_list -> statement_list SEMICOLON . statement
    (3) semicolon_opt -> SEMICOLON .
    (4) statement -> . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    $end            reduce using rule 3 (semicolon_opt -> SEMICOLON .)
    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    statement                      shift and go to state 24
    expression                     shift and go to state 4
    identifier                     shift and go to state 7

state 13

    (2) semicolon_opt -> epsilon .

    $end            reduce using rule 2 (semicolon_opt -> epsilon .)


state 14

    (8) expression -> expression PLUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 25
    identifier                     shift and go to state 7

state 15

    (9) expression -> expression MINUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 26
    identifier                     shift and go to state 7

state 16

    (10) expression -> expression TIMES . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 27
    identifier                     shift and go to state 7

state 17

    (11) expression -> expression DIVIDE . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 28
    identifier                     shift and go to state 7

state 18

    (12) expression -> expression MODULOS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 29
    identifier                     shift and go to state 7

state 19

    (13) expression -> expression CARAT . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    expression                     shift and go to state 30
    identifier                     shift and go to state 7

state 20

    (16) expression -> PLUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 16 (expression -> PLUS expression .)
    MINUS           reduce using rule 16 (expression -> PLUS expression .)
    TIMES           reduce using rule 16 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 16 (expression -> PLUS expression .)
    MODULOS         reduce using rule 16 (expression -> PLUS expression .)
    CARAT           reduce using rule 16 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 16 (expression -> PLUS expression .)
    $end            reduce using rule 16 (expression -> PLUS expression .)
    RPAREN          reduce using rule 16 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]
  ! MODULOS         [ shift and go to state 18 ]
  ! CARAT           [ shift and go to state 19 ]


state 21

    (15) expression -> MINUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 15 (expression -> MINUS expression .)
    MINUS           reduce using rule 15 (expression -> MINUS expression .)
    TIMES           reduce using rule 15 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 15 (expression -> MINUS expression .)
    MODULOS         reduce using rule 15 (expression -> MINUS expression .)
    CARAT           reduce using rule 15 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 15 (expression -> MINUS expression .)
    $end            reduce using rule 15 (expression -> MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]
  ! MODULOS         [ shift and go to state 18 ]
  ! CARAT           [ shift and go to state 19 ]


state 22

    (14) expression -> identifier EQUALS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULOS expression
    (13) expression -> . expression CARAT expression
    (14) expression -> . identifier EQUALS expression
    (15) expression -> . MINUS expression
    (16) expression -> . PLUS expression
    (17) expression -> . LPAREN expression RPAREN
    (18) expression -> . INT_LITERAL
    (19) expression -> . identifier
    (7) identifier -> . ID

    MINUS           shift and go to state 6
    PLUS            shift and go to state 5
    LPAREN          shift and go to state 8
    INT_LITERAL     shift and go to state 9
    ID              shift and go to state 10

    identifier                     shift and go to state 7
    expression                     shift and go to state 31

state 23

    (17) expression -> LPAREN expression . RPAREN
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    RPAREN          shift and go to state 32
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MODULOS         shift and go to state 18
    CARAT           shift and go to state 19


state 24

    (5) statement_list -> statement_list SEMICOLON statement .

    SEMICOLON       reduce using rule 5 (statement_list -> statement_list SEMICOLON statement .)
    $end            reduce using rule 5 (statement_list -> statement_list SEMICOLON statement .)


state 25

    (8) expression -> expression PLUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 8 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 8 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 8 (expression -> expression PLUS expression .)
    $end            reduce using rule 8 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 8 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MODULOS         shift and go to state 18
    CARAT           shift and go to state 19

  ! TIMES           [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! MODULOS         [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! CARAT           [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 26

    (9) expression -> expression MINUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 9 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 9 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 9 (expression -> expression MINUS expression .)
    $end            reduce using rule 9 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MODULOS         shift and go to state 18
    CARAT           shift and go to state 19

  ! TIMES           [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! MODULOS         [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! CARAT           [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 27

    (10) expression -> expression TIMES expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 10 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 10 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 10 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 10 (expression -> expression TIMES expression .)
    MODULOS         reduce using rule 10 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 10 (expression -> expression TIMES expression .)
    $end            reduce using rule 10 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 10 (expression -> expression TIMES expression .)
    CARAT           shift and go to state 19

  ! CARAT           [ reduce using rule 10 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]
  ! MODULOS         [ shift and go to state 18 ]


state 28

    (11) expression -> expression DIVIDE expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 11 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 11 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 11 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 11 (expression -> expression DIVIDE expression .)
    MODULOS         reduce using rule 11 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 11 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 11 (expression -> expression DIVIDE expression .)
    CARAT           shift and go to state 19

  ! CARAT           [ reduce using rule 11 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]
  ! MODULOS         [ shift and go to state 18 ]


state 29

    (12) expression -> expression MODULOS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 12 (expression -> expression MODULOS expression .)
    MINUS           reduce using rule 12 (expression -> expression MODULOS expression .)
    TIMES           reduce using rule 12 (expression -> expression MODULOS expression .)
    DIVIDE          reduce using rule 12 (expression -> expression MODULOS expression .)
    MODULOS         reduce using rule 12 (expression -> expression MODULOS expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression MODULOS expression .)
    $end            reduce using rule 12 (expression -> expression MODULOS expression .)
    RPAREN          reduce using rule 12 (expression -> expression MODULOS expression .)
    CARAT           shift and go to state 19

  ! CARAT           [ reduce using rule 12 (expression -> expression MODULOS expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]
  ! MODULOS         [ shift and go to state 18 ]


state 30

    (13) expression -> expression CARAT expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    PLUS            reduce using rule 13 (expression -> expression CARAT expression .)
    MINUS           reduce using rule 13 (expression -> expression CARAT expression .)
    TIMES           reduce using rule 13 (expression -> expression CARAT expression .)
    DIVIDE          reduce using rule 13 (expression -> expression CARAT expression .)
    MODULOS         reduce using rule 13 (expression -> expression CARAT expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression CARAT expression .)
    $end            reduce using rule 13 (expression -> expression CARAT expression .)
    RPAREN          reduce using rule 13 (expression -> expression CARAT expression .)
    CARAT           shift and go to state 19

  ! CARAT           [ reduce using rule 13 (expression -> expression CARAT expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]
  ! MODULOS         [ shift and go to state 18 ]


state 31

    (14) expression -> identifier EQUALS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULOS expression
    (13) expression -> expression . CARAT expression

    SEMICOLON       reduce using rule 14 (expression -> identifier EQUALS expression .)
    $end            reduce using rule 14 (expression -> identifier EQUALS expression .)
    RPAREN          reduce using rule 14 (expression -> identifier EQUALS expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MODULOS         shift and go to state 18
    CARAT           shift and go to state 19

  ! PLUS            [ reduce using rule 14 (expression -> identifier EQUALS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> identifier EQUALS expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> identifier EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> identifier EQUALS expression .) ]
  ! MODULOS         [ reduce using rule 14 (expression -> identifier EQUALS expression .) ]
  ! CARAT           [ reduce using rule 14 (expression -> identifier EQUALS expression .) ]


state 32

    (17) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    MODULOS         reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    CARAT           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (expression -> LPAREN expression RPAREN .)

