
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightEQUALSleftPLUSMINUSleftTIMESDIVIDEMODULOSrightCARATrightUMINUSUPLUSCARAT DIVIDE EQUALS ID INT_LITERAL LPAREN MINUS MODULOS PLUS RPAREN SEMICOLON TIMESprogram : statement_list semicolon_optsemicolon_opt : epsilon\n                   | SEMICOLONstatement : expressionstatement_list : statement_list SEMICOLON statementstatement_list : statementidentifier : IDexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | expression MODULOS expression\n                | expression CARAT expression\n                | identifier EQUALS expression expression : MINUS expression %prec UMINUS\n        | PLUS expression %prec UPLUSexpression : LPAREN expression RPARENexpression : INT_LITERALexpression : identifierepsilon :'
    
_lr_action_items = {'MINUS':([0,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,],[6,15,6,6,-19,6,-18,-7,6,6,6,6,6,6,6,-16,-15,6,15,-8,-9,-10,-11,-12,-13,15,-17,]),'PLUS':([0,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,],[5,14,5,5,-19,5,-18,-7,5,5,5,5,5,5,5,-16,-15,5,14,-8,-9,-10,-11,-12,-13,14,-17,]),'LPAREN':([0,5,6,8,12,14,15,16,17,18,19,22,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'INT_LITERAL':([0,5,6,8,12,14,15,16,17,18,19,22,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'ID':([0,5,6,8,12,14,15,16,17,18,19,22,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'$end':([1,2,3,4,7,9,10,11,12,13,20,21,24,25,26,27,28,29,30,31,32,],[0,-20,-6,-4,-19,-18,-7,-1,-3,-2,-16,-15,-5,-8,-9,-10,-11,-12,-13,-14,-17,]),'SEMICOLON':([2,3,4,7,9,10,20,21,24,25,26,27,28,29,30,31,32,],[12,-6,-4,-19,-18,-7,-16,-15,-5,-8,-9,-10,-11,-12,-13,-14,-17,]),'TIMES':([4,7,9,10,20,21,23,25,26,27,28,29,30,31,32,],[16,-19,-18,-7,-16,-15,16,16,16,-10,-11,-12,-13,16,-17,]),'DIVIDE':([4,7,9,10,20,21,23,25,26,27,28,29,30,31,32,],[17,-19,-18,-7,-16,-15,17,17,17,-10,-11,-12,-13,17,-17,]),'MODULOS':([4,7,9,10,20,21,23,25,26,27,28,29,30,31,32,],[18,-19,-18,-7,-16,-15,18,18,18,-10,-11,-12,-13,18,-17,]),'CARAT':([4,7,9,10,20,21,23,25,26,27,28,29,30,31,32,],[19,-19,-18,-7,-16,-15,19,19,19,19,19,19,19,19,-17,]),'EQUALS':([7,10,],[22,-7,]),'RPAREN':([7,9,10,20,21,23,25,26,27,28,29,30,31,32,],[-19,-18,-7,-16,-15,32,-8,-9,-10,-11,-12,-13,-14,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,12,],[3,24,]),'expression':([0,5,6,8,12,14,15,16,17,18,19,22,],[4,20,21,23,4,25,26,27,28,29,30,31,]),'identifier':([0,5,6,8,12,14,15,16,17,18,19,22,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'semicolon_opt':([2,],[11,]),'epsilon':([2,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list semicolon_opt','program',2,'p_program','miniFrontEnd.py',97),
  ('semicolon_opt -> epsilon','semicolon_opt',1,'p_semicolon_opt','miniFrontEnd.py',101),
  ('semicolon_opt -> SEMICOLON','semicolon_opt',1,'p_semicolon_opt','miniFrontEnd.py',102),
  ('statement -> expression','statement',1,'p_statement_expr','miniFrontEnd.py',109),
  ('statement_list -> statement_list SEMICOLON statement','statement_list',3,'p_statement_list_A','miniFrontEnd.py',114),
  ('statement_list -> statement','statement_list',1,'p_statement_list_B','miniFrontEnd.py',119),
  ('identifier -> ID','identifier',1,'p_identifier','miniFrontEnd.py',126),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','miniFrontEnd.py',134),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','miniFrontEnd.py',135),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','miniFrontEnd.py',136),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','miniFrontEnd.py',137),
  ('expression -> expression MODULOS expression','expression',3,'p_expression_binop','miniFrontEnd.py',138),
  ('expression -> expression CARAT expression','expression',3,'p_expression_binop','miniFrontEnd.py',139),
  ('expression -> identifier EQUALS expression','expression',3,'p_expression_binop','miniFrontEnd.py',140),
  ('expression -> MINUS expression','expression',2,'p_expression_unop','miniFrontEnd.py',144),
  ('expression -> PLUS expression','expression',2,'p_expression_unop','miniFrontEnd.py',145),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','miniFrontEnd.py',148),
  ('expression -> INT_LITERAL','expression',1,'p_expression_int_literal','miniFrontEnd.py',153),
  ('expression -> identifier','expression',1,'p_expression_id','miniFrontEnd.py',158),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','miniFrontEnd.py',166),
]
